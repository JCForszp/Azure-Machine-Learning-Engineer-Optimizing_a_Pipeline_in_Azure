
('prefittedsoftvotingclassifier',
 PreFittedSoftVotingClassifier(
     estimators=[('1', Pipeline(memory=None,
              steps=[('maxabsscaler', MaxAbsScaler(copy=True)),
                     ('xgboostclassifier',
                      XGBoostClassifier(n_jobs=1, problem_info=ProblemInfo(
         dataset_samples=32950,
         dataset_features=123,
         dataset_classes=2,
         dataset_num_categorical=0,
         dataset_categoricals=None,
         pipeline_categoricals=None,
         dataset_y_std=None,
         dataset_uid=None,
         subsampling=False,
         task='classifi...
         subsampling_schedule='hyperband_clip',
         cost_mode_param=None,
         iteration_timeout_mode=0,
         iteration_timeout_param=None,
         feature_column_names=None,
         label_column_name=None,
         weight_column_name=None,
         cv_split_column_names=None,
         enable_streaming=None,
         timeseries_param_dict=None,
         gpu_training_param_dict={'processing_unit_type': 'cpu'}
     ), random_state=0, tree_method='auto'))],
              verbose=False)), ('0', Pipeline(memory=None,
              steps=[('maxabsscaler', MaxAbsScaler(copy=True)),
                     ('lightgbmclassifier',
                      LightGBMClassifier(min_data_in_leaf=20, n_jobs=1, problem_info=ProblemInfo(
         dataset_samples=32950,
         dataset_features=123,
         dataset_classes=2,
         dataset_num_categorical=0,
         dataset_categoricals=None,
         pipeline_categoricals=None,
         dataset_y_std=None,
         dataset_uid=None,
         subsamplin...
         subsampling_schedule='hyperband_clip',
         cost_mode_param=None,
         iteration_timeout_mode=0,
         iteration_timeout_param=None,
         feature_column_names=None,
         label_column_name=None,
         weight_column_name=None,
         cv_split_column_names=None,
         enable_streaming=None,
         timeseries_param_dict=None,
         gpu_training_param_dict={'processing_unit_type': 'cpu'}
     ), random_state=None))],
              verbose=False)), ('6', Pipeline(memory=None,
              steps=[('sparsenormalizer', Normalizer(copy=True, norm='l2')),
                     ('xgboostclassifier',
                      XGBoostClassifier(booster='gbtree', colsample_bytree=0.9, eta=0.3, gamma=0, max_depth=9, max_leaves=0, n_estimators=25, n_jobs=1, objective='reg:logistic', problem_info=ProblemInfo(
         dataset_samples=32950,
         dataset_features=123,
         dataset_classes=2,
         dataset_num_cat...
         iteration_timeout_mode=0,
         iteration_timeout_param=None,
         feature_column_names=None,
         label_column_name=None,
         weight_column_name=None,
         cv_split_column_names=None,
         enable_streaming=None,
         timeseries_param_dict=None,
         gpu_training_param_dict={'processing_unit_type': 'cpu'}
     ), random_state=0, reg_alpha=0, reg_lambda=0.7291666666666667, subsample=0.9, tree_method='auto'))],
              verbose=False)), ('14', Pipeline(memory=None,
              steps=[('sparsenormalizer', Normalizer(copy=True, norm='l2')),
                     ('xgboostclassifier',
                      XGBoostClassifier(booster='gbtree', colsample_bytree=0.6, eta=0.3, gamma=1, max_depth=6, max_leaves=31, n_estimators=200, n_jobs=1, objective='reg:logistic', problem_info=ProblemInfo(
         dataset_samples=32950,
         dataset_features=123,
         dataset_classes=2,
         dataset_num_c...
         iteration_timeout_mode=0,
         iteration_timeout_param=None,
         feature_column_names=None,
         label_column_name=None,
         weight_column_name=None,
         cv_split_column_names=None,
         enable_streaming=None,
         timeseries_param_dict=None,
         gpu_training_param_dict={'processing_unit_type': 'cpu'}
     ), random_state=0, reg_alpha=0, reg_lambda=1.6666666666666667, subsample=0.9, tree_method='auto'))],
              verbose=False)), ('11', Pipeline(memory=None,
              steps=[('sparsenormalizer', Normalizer(copy=True, norm='max')),
                     ('xgboostclassifier',
                      XGBoostClassifier(booster='gbtree', colsample_bytree=0.9, eta=0.3, gamma=0, max_depth=10, max_leaves=15, n_estimators=25, n_jobs=1, objective='reg:logistic', problem_info=ProblemInfo(
         dataset_samples=32950,
         dataset_features=123,
         dataset_classes=2,
         dataset_num_...
         iteration_timeout_mode=0,
         iteration_timeout_param=None,
         feature_column_names=None,
         label_column_name=None,
         weight_column_name=None,
         cv_split_column_names=None,
         enable_streaming=None,
         timeseries_param_dict=None,
         gpu_training_param_dict={'processing_unit_type': 'cpu'}
     ), random_state=0, reg_alpha=0, reg_lambda=0.5208333333333334, subsample=0.6, tree_method='auto'))],
              verbose=False)), ('9', Pipeline(memory=None,
              steps=[('maxabsscaler', MaxAbsScaler(copy=True)),
                     ('logisticregression',
                      LogisticRegression(C=2.559547922699533, class_weight=None,
                                         dual=False, fit_intercept=True,
                                         intercept_scaling=1, l1_ratio=None,
                                         max_iter=100, multi_class='ovr', n_jobs=1,
                                         penalty='l2', random_state=None,
                                         solver='saga', tol=0.0001, verbose=0,
                                         warm_start=False))],
              verbose=False)), ('5', Pipeline(memory=None,
              steps=[('maxabsscaler', MaxAbsScaler(copy=True)),
                     ('randomforestclassifier',
                      RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                             class_weight='balanced',
                                             criterion='entropy', max_depth=None,
                                             max_features='sqrt',
                                             max_leaf_nodes=None, max_samples=None,
                                             min_impurity_decrease=0.0,
                                             min_impurity_split=None,
                                             min_samples_leaf=0.01,
                                             min_samples_split=0.2442105263157895,
                                             min_weight_fraction_leaf=0.0,
                                             n_estimators=10, n_jobs=1,
                                             oob_score=False, random_state=None,
                                             verbose=0, warm_start=False))],
              verbose=False))],
     weights=[0.21428571428571427, 0.35714285714285715, 0.14285714285714285, 0.07142857142857142, 0.07142857142857142, 0.07142857142857142, 0.07142857142857142],
     flatten_transform=None,
     classification_labels=array([0, 1])
 ))